<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.LibMapper">
  <resultMap id="BaseResultMap" type="entity.Lib">
    <id column="libId" jdbcType="INTEGER" property="libId" />
    <result column="libName" jdbcType="VARCHAR" property="libName" />
    <result column="libProfile" jdbcType="VARCHAR" property="libProfile" />
    <result column="teamId" jdbcType="INTEGER" property="teamId" />
    <result column="createDate" jdbcType="DATE" property="createDate" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    libId, libName, libProfile, teamId, createDate, status
  </sql>
  <select id="selectByExample" parameterType="entity.LibExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lib
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lib
    where libId = #{libId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lib
    where libId = #{libId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="entity.LibExample">
    delete from lib
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.Lib">
    insert into lib (libId, libName, libProfile, 
      teamId, createDate, status
      )
    values (#{libId,jdbcType=INTEGER}, #{libName,jdbcType=VARCHAR}, #{libProfile,jdbcType=VARCHAR}, 
      #{teamId,jdbcType=INTEGER}, #{createDate,jdbcType=DATE}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="entity.Lib">
    insert into lib
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="libId != null">
        libId,
      </if>
      <if test="libName != null">
        libName,
      </if>
      <if test="libProfile != null">
        libProfile,
      </if>
      <if test="teamId != null">
        teamId,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="libId != null">
        #{libId,jdbcType=INTEGER},
      </if>
      <if test="libName != null">
        #{libName,jdbcType=VARCHAR},
      </if>
      <if test="libProfile != null">
        #{libProfile,jdbcType=VARCHAR},
      </if>
      <if test="teamId != null">
        #{teamId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=DATE},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.LibExample" resultType="java.lang.Long">
    select count(*) from lib
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update lib
    <set>
      <if test="record.libId != null">
        libId = #{record.libId,jdbcType=INTEGER},
      </if>
      <if test="record.libName != null">
        libName = #{record.libName,jdbcType=VARCHAR},
      </if>
      <if test="record.libProfile != null">
        libProfile = #{record.libProfile,jdbcType=VARCHAR},
      </if>
      <if test="record.teamId != null">
        teamId = #{record.teamId,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        createDate = #{record.createDate,jdbcType=DATE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update lib
    set libId = #{record.libId,jdbcType=INTEGER},
      libName = #{record.libName,jdbcType=VARCHAR},
      libProfile = #{record.libProfile,jdbcType=VARCHAR},
      teamId = #{record.teamId,jdbcType=INTEGER},
      createDate = #{record.createDate,jdbcType=DATE},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Lib">
    update lib
    <set>
      <if test="libName != null">
        libName = #{libName,jdbcType=VARCHAR},
      </if>
      <if test="libProfile != null">
        libProfile = #{libProfile,jdbcType=VARCHAR},
      </if>
      <if test="teamId != null">
        teamId = #{teamId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=DATE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where libId = #{libId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Lib">
    update lib
    set libName = #{libName,jdbcType=VARCHAR},
      libProfile = #{libProfile,jdbcType=VARCHAR},
      teamId = #{teamId,jdbcType=INTEGER},
      createDate = #{createDate,jdbcType=DATE},
      status = #{status,jdbcType=INTEGER}
    where libId = #{libId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="entity.LibExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lib
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <cache />
</mapper>