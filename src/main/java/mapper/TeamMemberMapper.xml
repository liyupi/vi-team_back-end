<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.TeamMemberMapper">
    <resultMap id="BaseResultMap" type="entity.TeamMember">
        <id column="memberId" jdbcType="VARCHAR" property="memberId"/>
        <id column="teamId" jdbcType="INTEGER" property="teamId"/>
        <result column="joinDate" jdbcType="DATE" property="joinDate"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="inviteDate" jdbcType="DATE" property="inviteDate"/>
        <result column="position" jdbcType="VARCHAR" property="position"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    memberId, teamId, joinDate, status, inviteDate, position
  </sql>
    <sql id="UserJoinVo_Column_List">
    userId, username, realname, sex, signature, telnum, age, registerDate,
    identity,team_member.joinDate,team_member.position,team_member.inviteDate
  </sql>
    <sql id="TeamJoinVo_Column_List">
    team.teamId, teamName, profile, creatorId, createDate, type, headPic,team_member.joinDate,team_member.inviteDate
  </sql>
    <select id="selectByExample" parameterType="entity.TeamMemberExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from team_member
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="entity.TeamMemberKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from team_member
        where memberId = #{memberId,jdbcType=VARCHAR}
        and teamId = #{teamId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="entity.TeamMemberKey">
    delete from team_member
    where memberId = #{memberId,jdbcType=VARCHAR}
      and teamId = #{teamId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="entity.TeamMemberExample">
        delete from team_member
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="entity.TeamMember">
    insert into team_member (memberId, teamId, joinDate, 
      status, inviteDate, position
      )
    values (#{memberId,jdbcType=VARCHAR}, #{teamId,jdbcType=INTEGER}, #{joinDate,jdbcType=DATE}, 
      #{status,jdbcType=INTEGER}, #{inviteDate,jdbcType=DATE}, #{position,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="entity.TeamMember">
        insert into team_member
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="memberId != null">
                memberId,
            </if>
            <if test="teamId != null">
                teamId,
            </if>
            <if test="joinDate != null">
                joinDate,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="inviteDate != null">
                inviteDate,
            </if>
            <if test="position != null">
                position,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="memberId != null">
                #{memberId,jdbcType=VARCHAR},
            </if>
            <if test="teamId != null">
                #{teamId,jdbcType=INTEGER},
            </if>
            <if test="joinDate != null">
                #{joinDate,jdbcType=DATE},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="inviteDate != null">
                #{inviteDate,jdbcType=DATE},
            </if>
            <if test="position != null">
                #{position,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="entity.TeamMemberExample" resultType="java.lang.Long">
        select count(*) from team_member
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update team_member
        <set>
            <if test="record.memberId != null">
                memberId = #{record.memberId,jdbcType=VARCHAR},
            </if>
            <if test="record.teamId != null">
                teamId = #{record.teamId,jdbcType=INTEGER},
            </if>
            <if test="record.joinDate != null">
                joinDate = #{record.joinDate,jdbcType=DATE},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.inviteDate != null">
                inviteDate = #{record.inviteDate,jdbcType=DATE},
            </if>
            <if test="record.position != null">
                position = #{record.position,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update team_member
        set memberId = #{record.memberId,jdbcType=VARCHAR},
        teamId = #{record.teamId,jdbcType=INTEGER},
        joinDate = #{record.joinDate,jdbcType=DATE},
        status = #{record.status,jdbcType=INTEGER},
        inviteDate = #{record.inviteDate,jdbcType=DATE},
        position = #{record.position,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="entity.TeamMember">
        update team_member
        <set>
            <if test="joinDate != null">
                joinDate = #{joinDate,jdbcType=DATE},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="inviteDate != null">
                inviteDate = #{inviteDate,jdbcType=DATE},
            </if>
            <if test="position != null">
                position = #{position,jdbcType=VARCHAR},
            </if>
        </set>
        where memberId = #{memberId,jdbcType=VARCHAR}
        and teamId = #{teamId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="entity.TeamMember">
    update team_member
    set joinDate = #{joinDate,jdbcType=DATE},
      status = #{status,jdbcType=INTEGER},
      inviteDate = #{inviteDate,jdbcType=DATE},
      position = #{position,jdbcType=VARCHAR}
    where memberId = #{memberId,jdbcType=VARCHAR}
      and teamId = #{teamId,jdbcType=INTEGER}
  </update>
    <select id="selectByExampleWithRowbounds" parameterType="entity.TeamMemberExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from team_member
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectTeamsByExampleWithRowbounds" parameterType="entity.TeamMemberExample"
            resultType="entity.TeamJoinVo">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="TeamJoinVo_Column_List"/>
        from team_member,team
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
            and team_member.teamId = team.teamId
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectTeamsByExample" parameterType="entity.TeamMemberExample" resultType="entity.TeamJoinVo">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="TeamJoinVo_Column_List"/>
        from team_member,team
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
            and team_member.teamId = team.teamId
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectMembersByExampleWithRowbounds" parameterType="entity.TeamMemberExample"
            resultType="entity.UserJoinVo">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="UserJoinVo_Column_List"/>
        from team_member,user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
            and team_member.memberId = user.userId
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectMembersByExample" parameterType="entity.TeamMemberExample" resultType="entity.UserJoinVo">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="UserJoinVo_Column_List"/>
        from team_member,user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
            and team_member.memberId = user.userId
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <cache/>
</mapper>